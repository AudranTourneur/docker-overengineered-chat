version: '3'
services:
  #loki:
  #  image: grafana/loki:k178-d1cdf79
  #  restart: always
  #  networks:
  #    - main

  grafana:
    image: grafana/grafana-oss
    restart: always
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_SERVER_ROOT_URL=%(protocol)s://%(domain)s:%(http_port)s/grafana/
      - GF_SERVER_SERVE_FROM_SUB_PATH=true
    volumes:
      - ./grafana-data:/var/lib/grafana
    user: 'root'
    ports:
      - "3000:3000"
    networks:
      - main

  prometheus:
    image: prom/prometheus:v2.48.0
    restart: always
    volumes:
      - ./prometheus_etc:/etc/prometheus
      - ./prometheus_data:/prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --web.config.file=/etc/prometheus/web.yml
    networks:
      - main
  
  postgres:
    image: postgres:15.3
    restart: always
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin123
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
      - ./back/migrations-folder:/docker-entrypoint-initdb.d
    ports:
      - "6001:5432"
    command: ["postgres", "-c", "log_statement=all"]
    networks:
      - main

  postgres-exporter:
    image: bitnami/postgres-exporter
    restart: always
    ports:
      - "6005:9187"
    networks:
      - main

  pgadmin:
    image: dpage/pgadmin4:8.0
    ports:
      - "6002:80"
    restart: always
    volumes:
      - ./pgadmin-data:/var/lib/pgadmin
    user: 'root'
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@admin.admin
      - PGADMIN_DEFAULT_PASSWORD=admin123
      - PGADMIN_DISABLE_POSTFIX=true
    networks:
      - main
  
  minio:
    image: minio/minio:RELEASE.2023-12-02T10-51-33Z
    restart: always
    environment:
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=admin123
    volumes:
      - ./minio-data:/data
    ports:
      - "6003:9000"
      - "6004:9090"
    command: server --console-address ":9090" /data
    networks:
      - main

  nginx:
    build:
      context: nginx
    restart: always
    ports:
      - "${PORT_NGINX:-80}:80"
    networks:
      - main

  front:
    build:
      context: front
      dockerfile: Dockerfile.dev
    restart: always
    volumes:
      - ./front:/app
    networks:
      - main

  back:
    build:
      context: back
      dockerfile: Dockerfile.dev
    restart: always
    volumes:
      - ./back:/app
    networks:
      - main

networks:
  main:
    driver: bridge
